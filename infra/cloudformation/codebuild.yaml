AWSTemplateFormatVersion: "2010-09-09"
Description: CodeBuild project using a VPC from the VPC template

Parameters:
  ProjectName:
    Type: String
    Description: Name of the CodeBuild project
    Default: "MiracleImpliedCodeBuildProject"
  GitHubRepository:
    Type: String
    Description: GitHub Repository URL (e.g., https://github.com/yourusername/yourrepo)

Resources:
  # Create IAM Role for CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "CodeBuildBasePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub
                    - arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}
                    - { ProjectName: !Ref ProjectName }
                  - !Sub
                    - arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}:*
                    - { ProjectName: !Ref ProjectName }

              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - arn:aws:s3:::codepipeline-ap-southeast-1-*
                  - arn:aws:s3:::codepipeline-ap-southeast-1-*/*

              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub
                    - arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${ProjectName}-*
                    - { ProjectName: !Ref ProjectName }
        - PolicyName: "CodeBuildVpcAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterfacePermission
                Resource: !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*
                Condition:
                  StringEquals:
                    ec2:Subnet:
                      - !Sub
                        - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnetId}
                        - { PrivateSubnetId: !ImportValue PrivateSubnetId }
                    ec2:AuthorizedService: codebuild.amazonaws.com
        - PolicyName: "CodeBuildCodeConnectionsSourceCredentialsPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "codeconnections:GetConnectionToken"
                  - "codeconnections:GetConnection"
                  - "codeconnections:UseConnection"
                Resource: !ImportValue GitHubConnectionArn

  # Create CodeBuild Project
  MICodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      Source:
        Type: GITHUB
        Location: !Ref GitHubRepository
        GitCloneDepth: 1
        # BuildSpec: "buildspec.yaml"
        ReportBuildStatus: true
        Auth:
          Type: CODECONNECTIONS
          Resource: !ImportValue GitHubConnectionArn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux-x86_64-standard:5.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: WORKFLOW_JOB_QUEUED
      VpcConfig:
        VpcId: !ImportValue VPCId
        Subnets:
          - !ImportValue PrivateSubnetId
        SecurityGroupIds:
          - !ImportValue SecurityGroupId
      Tags:
        - Key: Name
          Value: "MICodeBuildProject"
        - Key: Project
          Value: "MiracleImplied"

Outputs:
  CodeBuildProjectName:
    Description: "CodeBuild Project Name"
    Value: !Ref MICodeBuildProject
    Export:
      Name: CodeBuildProjectName
